<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.UserDao">
    <resultMap id="userMap" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <collection property="accounts" ofType="account" javaType="java.util.List" column="uid">
            <id property="id" column="aid"/>
            <result property="uid" column="uid"/>
            <result property="money" column="money"/>
        </collection>
    </resultMap>

    <resultMap id="userRoleMap" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <collection property="roles" ofType="role" javaType="java.util.List" column="uid">
            <id property="id" column="aid"/>
            <result property="roleName" column="role_name"/>
            <result property="roleDesc" column="role_desc"/>
        </collection>
    </resultMap>
    <select id="findAllUserAndRole" resultMap="userRoleMap">
        SELECT u.id uid ,u.username,u.birthday,u.sex,u.address,r.*
        FROM user u LEFT JOIN user_role ur on ur.UID = u.id
        LEFT JOIN role r on r.ID = ur.RID
    </select>
    <select id="findAllUserAndAccount" resultMap="userMap">
        SELECT u.*,a.ID as aid , a.UID,a.MONEY FROM user u LEFT JOIN account a ON u.id = a.UID;
    </select>
    <!--查询所有-->
    <select id="findAll" resultType="User">
        SELECT * FROM USER
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="User">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
        INSERT INTO USER (username,birthday,sex,address) VALUES (#{username},#{birthday},#{sex},#{address});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="User">
        UPDATE USER SET username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} WHERE id = #{id};
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM USER WHERE username = #{name};
    </delete>
    <!--根据id查询用户-->
    <select id="findById" resultType="User" parameterType="Integer">
        SELECT * FROM USER WHERE id = #{uid};
    </select>
    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="User">
        SELECT * FROM USER WHERE username LIKE #{name};
    </select>
    <!--查询总记录条数-->
    <select id="findTotalCount" resultType="int">
        SELECT count(id) FROM user;
    </select>
    <!--根据QueryVo中的条件查询用户-->
    <select id="findUserByVo" resultType="User" parameterType="QueryVo">
        SELECT * FROM USER WHERE username LIKE #{user.username};
    </select>

    <select id="findUserByCondition" resultType="User" parameterType="User">
        SELECT * FROM USER
        <where>
            <if test="username!=null">
                AND username=#{username}
            </if>
        </where>
    </select>

    <select id="findInIds" resultType="User" parameterType="QueryVo">
        SELECT * FROM USER
       <where>
           <if test="ids!=null and ids.size()>0">
               <foreach collection="ids" item="uid" open="id in (" close=")" separator=",">
                   #{uid}
               </foreach>
           </if>
       </where>
    </select>
</mapper>