<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.itcast.dao.UserDao">
    <!--配置 查询结果的列名和实体类的属性名的对应关系
    <resultMap id="userMap" type="USER">
        主键字段的对应
        <id property="userId" column="id"></id>
        非主键字段的对应
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        &lt;!&ndash;select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user;&ndash;&gt;
        select * from user;
    </select>-->

    <!--查询所有-->
    <select id="findAll" resultType="user">
        SELECT * FROM USER
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="user">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
        INSERT INTO USER (username,birthday,sex,address) VALUES (#{username},#{birthday},#{sex},#{address});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="user">
        UPDATE USER SET username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} WHERE id = #{id};
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM USER WHERE id = #{id};
    </delete>
    <!--根据id查询用户-->
    <select id="findById" resultType="user" parameterType="Integer">
        SELECT * FROM USER WHERE id = #{uid};
    </select>
    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="user">
        SELECT * FROM USER WHERE username LIKE #{name};
    </select>
    <!--查询总记录条数-->
    <select id="findTotalCount" resultType="int">
        SELECT count(id) FROM user;
    </select>
    <!--根据QueryVo中的条件查询用户-->
    <select id="findUserByVo" resultType="user" parameterType="cn.itcast.domain.QueryVo">
        SELECT * FROM USER WHERE username LIKE #{user.username};
    </select>
</mapper>
